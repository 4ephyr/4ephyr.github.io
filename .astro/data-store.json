[["Map",1,2,7,8],"meta::meta",["Map",3,4,5,6],"astro-version","5.0.2","config-digest","71d17fc55ed27a57","blogPosts",["Map",9,10,38,39],"1",{"id":9,"data":11,"body":19,"filePath":20,"digest":21,"rendered":22,"legacyId":37},{"title":12,"date":13,"description":14,"tags":15},"What is a Black Box in Airplanes?",["Date","2024-12-05T00:00:00.000Z"],"More about a blackbox.",[16,17,18],"airplane","blackbox","data","A black box, also known as a flight recorder, is a crucial device in modern aviation that records important flight data and cockpit conversations. Despite its name, it's actually painted bright orange to aid in recovery after accidents.\r\n\r\n## Two Main Components\r\n\r\n1. Flight Data Recorder (FDR)\r\n2. Cockpit Voice Recorder (CVR)\r\n\r\n![Black Box Components](https://upload.wikimedia.org/wikipedia/commons/6/6a/Fdr_sidefront.jpg)\r\n\r\n## Key Features\r\n\r\n- Built to withstand extreme conditions\r\n- Can survive:\r\n    - High temperatures\r\n    - Deep water pressure\r\n    - Severe crashes\r\n\r\nThe black box is typically located in the aircraft's tail section, where it has the highest chance of surviving a crash.\r\n\r\n## Why It's Important\r\n\r\nBlack boxes are essential for:\r\n- Investigating accidents\r\n- Improving aviation safety\r\n- Understanding flight incidents","src/content/blogPosts/1.md","739c22f5315ba9cf",{"html":23,"metadata":24},"\u003Cp>A black box, also known as a flight recorder, is a crucial device in modern aviation that records important flight data and cockpit conversations. Despite its name, it’s actually painted bright orange to aid in recovery after accidents.\u003C/p>\n\u003Ch2 id=\"two-main-components\">Two Main Components\u003C/h2>\n\u003Col>\n\u003Cli>Flight Data Recorder (FDR)\u003C/li>\n\u003Cli>Cockpit Voice Recorder (CVR)\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cimg src=\"https://upload.wikimedia.org/wikipedia/commons/6/6a/Fdr_sidefront.jpg\" alt=\"Black Box Components\">\u003C/p>\n\u003Ch2 id=\"key-features\">Key Features\u003C/h2>\n\u003Cul>\n\u003Cli>Built to withstand extreme conditions\u003C/li>\n\u003Cli>Can survive:\n\u003Cul>\n\u003Cli>High temperatures\u003C/li>\n\u003Cli>Deep water pressure\u003C/li>\n\u003Cli>Severe crashes\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>The black box is typically located in the aircraft’s tail section, where it has the highest chance of surviving a crash.\u003C/p>\n\u003Ch2 id=\"why-its-important\">Why It’s Important\u003C/h2>\n\u003Cp>Black boxes are essential for:\u003C/p>\n\u003Cul>\n\u003Cli>Investigating accidents\u003C/li>\n\u003Cli>Improving aviation safety\u003C/li>\n\u003Cli>Understanding flight incidents\u003C/li>\n\u003C/ul>",{"headings":25,"imagePaths":36,"frontmatter":11},[26,30,33],{"depth":27,"slug":28,"text":29},2,"two-main-components","Two Main Components",{"depth":27,"slug":31,"text":32},"key-features","Key Features",{"depth":27,"slug":34,"text":35},"why-its-important","Why It’s Important",[],"1.md","2",{"id":38,"data":40,"body":48,"filePath":49,"digest":50,"rendered":51,"legacyId":81},{"title":41,"date":42,"description":43,"tags":44},"How to check for XSS?",["Date","2024-12-05T00:00:00.000Z"],"This blog will help you check for cross site scripting (XSS).",[45,46,47],"xss","web","script","## How to Test for Cross-Site Scripting (XSS)\r\n\r\nCross-Site Scripting (XSS) is a security vulnerability that allows an attacker to inject malicious scripts into content from otherwise trusted websites. Here, we will discuss how to test for XSS vulnerabilities.\r\n\r\n## What is XSS?\r\n\r\nXSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. There are three main types of XSS attacks:\r\n\r\n1. **Stored XSS**: The malicious script is stored on the target server.\r\n2. **Reflected XSS**: The malicious script is reflected off a web server.\r\n3. **DOM-based XSS**: The vulnerability exists in client-side code rather than server-side code.\r\n\r\n## Testing for XSS\r\n\r\n### 1. Manual Testing\r\n\r\nTo manually test for XSS, you can try injecting common XSS payloads into input fields and see if they get executed. Here are some common payloads:\r\n\r\n```html\r\n\u003Cscript>alert('XSS')\u003C/script>\r\n\u003Cimg src=x onerror=alert('XSS')>\r\n```\r\n\r\n### 2. Automated Testing\r\n\r\nThere are several tools available to automate XSS testing:\r\n\r\n- **OWASP ZAP**: An open-source web application security scanner.\r\n- **Burp Suite**: A graphical tool for testing web application security.\r\n\r\n### Example\r\n\r\nLet's consider a simple example where a web application displays user input without proper sanitization:\r\n\r\n```html\r\n\u003C!DOCTYPE html>\r\n\u003Chtml>\r\n\u003Chead>\r\n    \u003Ctitle>XSS Test\u003C/title>\r\n\u003C/head>\r\n\u003Cbody>\r\n    \u003Cform method=\"GET\">\r\n        \u003Cinput type=\"text\" name=\"input\" />\r\n        \u003Cinput type=\"submit\" value=\"Submit\" />\r\n    \u003C/form>\r\n    \u003Cdiv>\r\n        You entered: \u003C?php echo $_GET['input']; ?>\r\n    \u003C/div>\r\n\u003C/body>\r\n\u003C/html>\r\n```\r\n\r\nIf you enter `\u003Cscript>alert('XSS')\u003C/script>` in the input field and submit the form, the script will execute, indicating an XSS vulnerability.\r\n\r\n### Preventing XSS\r\n\r\nTo prevent XSS, always sanitize and escape user input. Here are some tips:\r\n\r\n- Use proper escaping for HTML, JavaScript, and CSS.\r\n- Use security libraries and frameworks that provide built-in XSS protection.\r\n- Validate input on both the client and server sides.\r\n\r\n### Conclusion\r\n\r\nTesting for XSS is crucial for web application security. By understanding the different types of XSS and using both manual and automated testing methods, you can identify and mitigate these vulnerabilities.","src/content/blogPosts/2.md","c84a39ad472b479c",{"html":52,"metadata":53},"\u003Ch2 id=\"how-to-test-for-cross-site-scripting-xss\">How to Test for Cross-Site Scripting (XSS)\u003C/h2>\n\u003Cp>Cross-Site Scripting (XSS) is a security vulnerability that allows an attacker to inject malicious scripts into content from otherwise trusted websites. Here, we will discuss how to test for XSS vulnerabilities.\u003C/p>\n\u003Ch2 id=\"what-is-xss\">What is XSS?\u003C/h2>\n\u003Cp>XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. There are three main types of XSS attacks:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Stored XSS\u003C/strong>: The malicious script is stored on the target server.\u003C/li>\n\u003Cli>\u003Cstrong>Reflected XSS\u003C/strong>: The malicious script is reflected off a web server.\u003C/li>\n\u003Cli>\u003Cstrong>DOM-based XSS\u003C/strong>: The vulnerability exists in client-side code rather than server-side code.\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"testing-for-xss\">Testing for XSS\u003C/h2>\n\u003Ch3 id=\"1-manual-testing\">1. Manual Testing\u003C/h3>\n\u003Cp>To manually test for XSS, you can try injecting common XSS payloads into input fields and see if they get executed. Here are some common payloads:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003Cspan style=\"color:#B392F0\">alert\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'XSS'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">img\u003C/span>\u003Cspan style=\"color:#B392F0\"> src\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">x\u003C/span>\u003Cspan style=\"color:#B392F0\"> onerror\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#B392F0\">alert\u003C/span>\u003Cspan style=\"color:#9ECBFF\">(\u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">'XSS')\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-automated-testing\">2. Automated Testing\u003C/h3>\n\u003Cp>There are several tools available to automate XSS testing:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>OWASP ZAP\u003C/strong>: An open-source web application security scanner.\u003C/li>\n\u003Cli>\u003Cstrong>Burp Suite\u003C/strong>: A graphical tool for testing web application security.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"example\">Example\u003C/h3>\n\u003Cp>Let’s consider a simple example where a web application displays user input without proper sanitization:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#85E89D\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#B392F0\"> html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">title\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>XSS Test&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">title\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">form\u003C/span>\u003Cspan style=\"color:#B392F0\"> method\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"GET\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">input\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"text\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"input\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">input\u003C/span>\u003Cspan style=\"color:#B392F0\"> type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Submit\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">form\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        You entered: \u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">?php echo $_GET['input']; ?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>If you enter \u003Ccode>&#x3C;script>alert('XSS')&#x3C;/script>\u003C/code> in the input field and submit the form, the script will execute, indicating an XSS vulnerability.\u003C/p>\n\u003Ch3 id=\"preventing-xss\">Preventing XSS\u003C/h3>\n\u003Cp>To prevent XSS, always sanitize and escape user input. Here are some tips:\u003C/p>\n\u003Cul>\n\u003Cli>Use proper escaping for HTML, JavaScript, and CSS.\u003C/li>\n\u003Cli>Use security libraries and frameworks that provide built-in XSS protection.\u003C/li>\n\u003Cli>Validate input on both the client and server sides.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"conclusion\">Conclusion\u003C/h3>\n\u003Cp>Testing for XSS is crucial for web application security. By understanding the different types of XSS and using both manual and automated testing methods, you can identify and mitigate these vulnerabilities.\u003C/p>",{"headings":54,"imagePaths":80,"frontmatter":40},[55,58,61,64,68,71,74,77],{"depth":27,"slug":56,"text":57},"how-to-test-for-cross-site-scripting-xss","How to Test for Cross-Site Scripting (XSS)",{"depth":27,"slug":59,"text":60},"what-is-xss","What is XSS?",{"depth":27,"slug":62,"text":63},"testing-for-xss","Testing for XSS",{"depth":65,"slug":66,"text":67},3,"1-manual-testing","1. Manual Testing",{"depth":65,"slug":69,"text":70},"2-automated-testing","2. Automated Testing",{"depth":65,"slug":72,"text":73},"example","Example",{"depth":65,"slug":75,"text":76},"preventing-xss","Preventing XSS",{"depth":65,"slug":78,"text":79},"conclusion","Conclusion",[],"2.md"]